grammar org.xtext.Langage_while with org.eclipse.xtext.common.Terminals

generate langage_while "http://www.xtext.org/Langage_while"

Model:
	(prog+= Function )*;
	

	/* Intégrer def dans function pour l'interprétation du noeud
	* Identificateur LC
	* Donner des noms (command etc)
	*/


/* PROGRAM */
Function : 'function' (n=LCs) (nom=SYM) ':' (t=LCs) (d=Def);
Def : 'read' l=LCs (in=Input) z=LCs
		'%' v=Commands s=LCs
		'%' 'write' u=LCs o=Output;
Input : ((v=VAR) ',' (z=LCs) (in=Input)) | (y=VAR);
Output : (n=VAR ',' (q=LCs) (o=Output)) | s=VAR;


/* COMMANDES SIMPLES ET COMPLEXES */
Commands : (a=Command) (';' l=LCs s=Commands)?;

Command :nop=Nop|affect=Assign|wh=While|forr=For|fore=Foreach|iff=If;

Nop:'nop';
Assign:(e=Vars l=LCs ':=' c=LCs n=EXPRS);
While: 'while' ll=LCs ee=EXPR cc=LCs 'do' (z=LCs) k=Commands lc=LCs 'od';
For:'for' cc=LCs hh=EXPR tt=LCs 'do' vv=LCs c1=Commands ss=LCs 'od';
If: 'if' mm=LCs jj=EXPR kk=LCs 'then' hg=LCs c2=Commands gg=LCs ('else' ff=LCs o=Commands dd=LCs)? 'fi';
Foreach: 'foreach' sq=LCs wx=EXPR lc=LCs 'in' lc2=LCs e1=EXPR lc3=LCs 'do' lc4=LCs c3=Commands lc5=LCs 'od';

Vars : (a=VAR) (',' (l=LCs) (u=Vars))?;
EXPRS : f=EXPR (',' l=LCs e2=EXPRS)?;


/* EXPRESSIONS SIMPLES */
EXPR : e1=EXPRSIMPLE | ex=EXPRAND;
EXPRSIMPLE: nil='nil' | v=VAR | sym=SYM | '(' mot=('cons'|'list') lex=LEXPR ')' | '(' mot=('hd'|'tl') l=LCs ex=EXPR ')' | '(' sym=SYM lex=LEXPR ')';

			 
LEXPR : (f=LCs) (n=EXPR) (t=LEXPR)?;

/* EXPRESSIONS LOGIQUES */
EXPRAND: f=EXPROR (lc1=LCs 'and' lc2=LCs ee=EXPRAND)?;
EXPROR: e1=EXPRNOT (lc1=LCs 'or' lc2=LCs e2=EXPROR)?;
EXPRNOT: ('not' lc1=LCs)? e1=EXPREQ;
EXPREQ: (e1=EXPRSIMPLE ccc=LCs '=?' lc2=LCs w=EXPRSIMPLE) | ('('ex=EXPR')');


/* UNITES LEXICALES */ 
Variable : n=VAR; 
terminal VAR : ('A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')*CONF;

Symboles: SYM;
terminal SYM : ('a'..'z')('a'..'z'|'A'..'Z'|'0'..'9')*CONF; 

Confort : CONF; 
terminal CONF :  (('-'|'+'|'.'|'/'|'_'|'&'|"->")('a'..'z'|'A'..'Z'|'0'..'9')+)*('?'|'!'); 

//Ponctuation: PONCT;	
//terminal PONCT : (','|';'|':'|'('|')'); 

LCs : l=LC?;
LC : a=SP|z=CR|e=TAB|r=LF; 

terminal SP : ' '; 
terminal CR : '\n'; 
terminal TAB : '\t'; 
terminal LF : '\r';
