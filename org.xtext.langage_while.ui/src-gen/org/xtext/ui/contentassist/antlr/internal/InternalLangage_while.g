/*
 * generated by Xtext
 */
grammar InternalLangage_while;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.Langage_whileGrammarAccess;

}

@parser::members {
 
 	private Langage_whileGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(Langage_whileGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
(rule__Model__GreetingsAssignment)
{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDef
entryRuleDef 
:
{ before(grammarAccess.getDefRule()); }
	 ruleDef
{ after(grammarAccess.getDefRule()); } 
	 EOF 
;

// Rule Def
ruleDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefAccess().getGroup()); }
(rule__Def__Group__0)
{ after(grammarAccess.getDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getAlternatives()); }
(rule__Input__Alternatives)
{ after(grammarAccess.getInputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutput
entryRuleOutput 
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputAccess().getAlternatives()); }
(rule__Output__Alternatives)
{ after(grammarAccess.getOutputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommands
entryRuleCommands 
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandsAccess().getGroup()); }
(rule__Commands__Group__0)
{ after(grammarAccess.getCommandsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVars
entryRuleVars 
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarsAccess().getGroup()); }
(rule__Vars__Group__0)
{ after(grammarAccess.getVarsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRS
entryRuleEXPRS 
:
{ before(grammarAccess.getEXPRSRule()); }
	 ruleEXPRS
{ after(grammarAccess.getEXPRSRule()); } 
	 EOF 
;

// Rule EXPRS
ruleEXPRS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRSAccess().getGroup()); }
(rule__EXPRS__Group__0)
{ after(grammarAccess.getEXPRSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPR
entryRuleEXPR 
:
{ before(grammarAccess.getEXPRRule()); }
	 ruleEXPR
{ after(grammarAccess.getEXPRRule()); } 
	 EOF 
;

// Rule EXPR
ruleEXPR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRAccess().getAlternatives()); }
(rule__EXPR__Alternatives)
{ after(grammarAccess.getEXPRAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRSIMPLE
entryRuleEXPRSIMPLE 
:
{ before(grammarAccess.getEXPRSIMPLERule()); }
	 ruleEXPRSIMPLE
{ after(grammarAccess.getEXPRSIMPLERule()); } 
	 EOF 
;

// Rule EXPRSIMPLE
ruleEXPRSIMPLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getAlternatives()); }
(rule__EXPRSIMPLE__Alternatives)
{ after(grammarAccess.getEXPRSIMPLEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLEXPR
entryRuleLEXPR 
:
{ before(grammarAccess.getLEXPRRule()); }
	 ruleLEXPR
{ after(grammarAccess.getLEXPRRule()); } 
	 EOF 
;

// Rule LEXPR
ruleLEXPR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLEXPRAccess().getGroup()); }
(rule__LEXPR__Group__0)
{ after(grammarAccess.getLEXPRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRAND
entryRuleEXPRAND 
:
{ before(grammarAccess.getEXPRANDRule()); }
	 ruleEXPRAND
{ after(grammarAccess.getEXPRANDRule()); } 
	 EOF 
;

// Rule EXPRAND
ruleEXPRAND
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRANDAccess().getGroup()); }
(rule__EXPRAND__Group__0)
{ after(grammarAccess.getEXPRANDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPROR
entryRuleEXPROR 
:
{ before(grammarAccess.getEXPRORRule()); }
	 ruleEXPROR
{ after(grammarAccess.getEXPRORRule()); } 
	 EOF 
;

// Rule EXPROR
ruleEXPROR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRORAccess().getGroup()); }
(rule__EXPROR__Group__0)
{ after(grammarAccess.getEXPRORAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRNOT
entryRuleEXPRNOT 
:
{ before(grammarAccess.getEXPRNOTRule()); }
	 ruleEXPRNOT
{ after(grammarAccess.getEXPRNOTRule()); } 
	 EOF 
;

// Rule EXPRNOT
ruleEXPRNOT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRNOTAccess().getGroup()); }
(rule__EXPRNOT__Group__0)
{ after(grammarAccess.getEXPRNOTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPREQ
entryRuleEXPREQ 
:
{ before(grammarAccess.getEXPREQRule()); }
	 ruleEXPREQ
{ after(grammarAccess.getEXPREQRule()); } 
	 EOF 
;

// Rule EXPREQ
ruleEXPREQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPREQAccess().getAlternatives()); }
(rule__EXPREQ__Alternatives)
{ after(grammarAccess.getEXPREQAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleLCs
entryRuleLCs 
:
{ before(grammarAccess.getLCsRule()); }
	 ruleLCs
{ after(grammarAccess.getLCsRule()); } 
	 EOF 
;

// Rule LCs
ruleLCs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLCsAccess().getLCParserRuleCall()); }
(	ruleLC)?
{ after(grammarAccess.getLCsAccess().getLCParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLC
entryRuleLC 
:
{ before(grammarAccess.getLCRule()); }
	 ruleLC
{ after(grammarAccess.getLCRule()); } 
	 EOF 
;

// Rule LC
ruleLC
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLCAccess().getAlternatives()); }
(rule__LC__Alternatives)
{ after(grammarAccess.getLCAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Input__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getGroup_0()); }
(rule__Input__Group_0__0)
{ after(grammarAccess.getInputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInputAccess().getYAssignment_1()); }
(rule__Input__YAssignment_1)
{ after(grammarAccess.getInputAccess().getYAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getGroup_0()); }
(rule__Output__Group_0__0)
{ after(grammarAccess.getOutputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOutputAccess().getSAssignment_1()); }
(rule__Output__SAssignment_1)
{ after(grammarAccess.getOutputAccess().getSAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopKeyword_0()); }

	'nop' 

{ after(grammarAccess.getCommandAccess().getNopKeyword_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_1()); }
(rule__Command__Group_1__0)
{ after(grammarAccess.getCommandAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_2()); }
(rule__Command__Group_2__0)
{ after(grammarAccess.getCommandAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_3()); }
(rule__Command__Group_3__0)
{ after(grammarAccess.getCommandAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_4()); }
(rule__Command__Group_4__0)
{ after(grammarAccess.getCommandAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_5()); }
(rule__Command__Group_5__0)
{ after(grammarAccess.getCommandAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getEXPRSIMPLEParserRuleCall_0()); }
	ruleEXPRSIMPLE
{ after(grammarAccess.getEXPRAccess().getEXPRSIMPLEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEXPRAccess().getEXPRANDParserRuleCall_1()); }
	ruleEXPRAND
{ after(grammarAccess.getEXPRAccess().getEXPRANDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_0()); }
(rule__EXPRSIMPLE__Alternatives_0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_1()); }
(rule__EXPRSIMPLE__Alternatives_1)
{ after(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_1()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_2()); }
(rule__EXPRSIMPLE__Alternatives_2)
{ after(grammarAccess.getEXPRSIMPLEAccess().getAlternatives_2()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_3()); }
(rule__EXPRSIMPLE__Group_3__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getNilKeyword_0_0()); }

	'nil' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getNilKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getVARTerminalRuleCall_0_1()); }
	RULE_VAR
{ after(grammarAccess.getEXPRSIMPLEAccess().getVARTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSYMTerminalRuleCall_0_2()); }
	RULE_SYM
{ after(grammarAccess.getEXPRSIMPLEAccess().getSYMTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_1_0()); }
(rule__EXPRSIMPLE__Group_1_0__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_1_1()); }
(rule__EXPRSIMPLE__Group_1_1__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_2_0()); }
(rule__EXPRSIMPLE__Group_2_0__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_2_1()); }
(rule__EXPRSIMPLE__Group_2_1__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getGroup_0()); }
(rule__EXPREQ__Group_0__0)
{ after(grammarAccess.getEXPREQAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEXPREQAccess().getGroup_1()); }
(rule__EXPREQ__Group_1__0)
{ after(grammarAccess.getEXPREQAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getSPTerminalRuleCall_0()); }
	RULE_SP
{ after(grammarAccess.getLCAccess().getSPTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLCAccess().getCRTerminalRuleCall_1()); }
	RULE_CR
{ after(grammarAccess.getLCAccess().getCRTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLCAccess().getTABTerminalRuleCall_2()); }
	RULE_TAB
{ after(grammarAccess.getLCAccess().getTABTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLCAccess().getLFTerminalRuleCall_3()); }
	RULE_LF
{ after(grammarAccess.getLCAccess().getLFTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getFAssignment_0()); }
(rule__Program__FAssignment_0)*
{ after(grammarAccess.getProgramAccess().getFAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getGroup_1()); }
(rule__Program__Group_1__0)?
{ after(grammarAccess.getProgramAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Program__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_1__0__Impl
	rule__Program__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getCRTerminalRuleCall_1_0()); }
	RULE_CR
{ after(grammarAccess.getProgramAccess().getCRTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPpAssignment_1_1()); }
(rule__Program__PpAssignment_1_1)
{ after(grammarAccess.getProgramAccess().getPpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLCsParserRuleCall_1()); }
	ruleLCs
{ after(grammarAccess.getFunctionAccess().getLCsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomAssignment_2()); }
(rule__Function__NomAssignment_2)
{ after(grammarAccess.getFunctionAccess().getNomAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLCsParserRuleCall_4()); }
	ruleLCs
{ after(grammarAccess.getFunctionAccess().getLCsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDAssignment_5()); }
(rule__Function__DAssignment_5)
{ after(grammarAccess.getFunctionAccess().getDAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Def__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__0__Impl
	rule__Def__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getReadKeyword_0()); }

	'read' 

{ after(grammarAccess.getDefAccess().getReadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__1__Impl
	rule__Def__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLCsParserRuleCall_1()); }
	ruleLCs
{ after(grammarAccess.getDefAccess().getLCsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__2__Impl
	rule__Def__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getInAssignment_2()); }
(rule__Def__InAssignment_2)
{ after(grammarAccess.getDefAccess().getInAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__3__Impl
	rule__Def__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLCsParserRuleCall_3()); }
	ruleLCs
{ after(grammarAccess.getDefAccess().getLCsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__4__Impl
	rule__Def__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getPercentSignKeyword_4()); }

	'%' 

{ after(grammarAccess.getDefAccess().getPercentSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__5__Impl
	rule__Def__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getCAssignment_5()); }
(rule__Def__CAssignment_5)
{ after(grammarAccess.getDefAccess().getCAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__6__Impl
	rule__Def__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLCsParserRuleCall_6()); }
	ruleLCs
{ after(grammarAccess.getDefAccess().getLCsParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__7__Impl
	rule__Def__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getPercentSignKeyword_7()); }

	'%' 

{ after(grammarAccess.getDefAccess().getPercentSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__8__Impl
	rule__Def__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getWriteKeyword_8()); }

	'write' 

{ after(grammarAccess.getDefAccess().getWriteKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__9__Impl
	rule__Def__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLCsParserRuleCall_9()); }
	ruleLCs
{ after(grammarAccess.getDefAccess().getLCsParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getOAssignment_10()); }
(rule__Def__OAssignment_10)
{ after(grammarAccess.getDefAccess().getOAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Input__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__0__Impl
	rule__Input__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVAssignment_0_0()); }
(rule__Input__VAssignment_0_0)
{ after(grammarAccess.getInputAccess().getVAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__1__Impl
	rule__Input__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__2__Impl
	rule__Input__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getLCsParserRuleCall_0_2()); }
	ruleLCs
{ after(grammarAccess.getInputAccess().getLCsParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getInAssignment_0_3()); }
(rule__Input__InAssignment_0_3)
{ after(grammarAccess.getInputAccess().getInAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Output__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__0__Impl
	rule__Output__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getNAssignment_0_0()); }
(rule__Output__NAssignment_0_0)
{ after(grammarAccess.getOutputAccess().getNAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__1__Impl
	rule__Output__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__2__Impl
	rule__Output__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getLCsParserRuleCall_0_2()); }
	ruleLCs
{ after(grammarAccess.getOutputAccess().getLCsParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getOAssignment_0_3()); }
(rule__Output__OAssignment_0_3)
{ after(grammarAccess.getOutputAccess().getOAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Commands__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCommandParserRuleCall_0()); }
	ruleCommand
{ after(grammarAccess.getCommandsAccess().getCommandParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
(rule__Commands__Group_1__0)?
{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Commands__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__1__Impl
	rule__Commands__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getLCsParserRuleCall_1_1()); }
	ruleLCs
{ after(grammarAccess.getCommandsAccess().getLCsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCommandsParserRuleCall_1_2()); }
	ruleCommands
{ after(grammarAccess.getCommandsAccess().getCommandsParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Command__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__0__Impl
	rule__Command__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVarsParserRuleCall_1_0()); }
	ruleVars
{ after(grammarAccess.getCommandAccess().getVarsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__1__Impl
	rule__Command__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_1_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__2__Impl
	rule__Command__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_2()); }

	':=' 

{ after(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__3__Impl
	rule__Command__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_1_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRSParserRuleCall_1_4()); }
	ruleEXPRS
{ after(grammarAccess.getCommandAccess().getEXPRSParserRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Command__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__0__Impl
	rule__Command__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getWhileKeyword_2_0()); }

	'while' 

{ after(grammarAccess.getCommandAccess().getWhileKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__1__Impl
	rule__Command__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__2__Impl
	rule__Command__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRParserRuleCall_2_2()); }
	ruleEXPR
{ after(grammarAccess.getCommandAccess().getEXPRParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__3__Impl
	rule__Command__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__4__Impl
	rule__Command__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_2_4()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__5__Impl
	rule__Command__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_5()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__6__Impl
	rule__Command__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandsParserRuleCall_2_6()); }
	ruleCommands
{ after(grammarAccess.getCommandAccess().getCommandsParserRuleCall_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__7__Impl
	rule__Command__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_7()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_2_8()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Command__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__0__Impl
	rule__Command__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getForKeyword_3_0()); }

	'for' 

{ after(grammarAccess.getCommandAccess().getForKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__1__Impl
	rule__Command__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__2__Impl
	rule__Command__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRParserRuleCall_3_2()); }
	ruleEXPR
{ after(grammarAccess.getCommandAccess().getEXPRParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__3__Impl
	rule__Command__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__4__Impl
	rule__Command__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_3_4()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__5__Impl
	rule__Command__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_5()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__6__Impl
	rule__Command__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandsParserRuleCall_3_6()); }
	ruleCommands
{ after(grammarAccess.getCommandAccess().getCommandsParserRuleCall_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__7__Impl
	rule__Command__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_7()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_3_8()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Command__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__0__Impl
	rule__Command__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getIfKeyword_4_0()); }

	'if' 

{ after(grammarAccess.getCommandAccess().getIfKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__1__Impl
	rule__Command__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__2__Impl
	rule__Command__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRParserRuleCall_4_2()); }
	ruleEXPR
{ after(grammarAccess.getCommandAccess().getEXPRParserRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__3__Impl
	rule__Command__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__4__Impl
	rule__Command__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getThenKeyword_4_4()); }

	'then' 

{ after(grammarAccess.getCommandAccess().getThenKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__5__Impl
	rule__Command__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_5()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__6__Impl
	rule__Command__Group_4__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandsParserRuleCall_4_6()); }
	ruleCommands
{ after(grammarAccess.getCommandAccess().getCommandsParserRuleCall_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__7__Impl
	rule__Command__Group_4__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_7()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__8__Impl
	rule__Command__Group_4__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_4_8()); }
(rule__Command__Group_4_8__0)?
{ after(grammarAccess.getCommandAccess().getGroup_4_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getFiKeyword_4_9()); }

	'fi' 

{ after(grammarAccess.getCommandAccess().getFiKeyword_4_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Command__Group_4_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4_8__0__Impl
	rule__Command__Group_4_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getElseKeyword_4_8_0()); }

	'else' 

{ after(grammarAccess.getCommandAccess().getElseKeyword_4_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4_8__1__Impl
	rule__Command__Group_4_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_8_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4_8__2__Impl
	rule__Command__Group_4_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandsParserRuleCall_4_8_2()); }
	ruleCommands
{ after(grammarAccess.getCommandAccess().getCommandsParserRuleCall_4_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_4_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_8_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_4_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Command__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__0__Impl
	rule__Command__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getForeachKeyword_5_0()); }

	'foreach' 

{ after(grammarAccess.getCommandAccess().getForeachKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__1__Impl
	rule__Command__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_1()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__2__Impl
	rule__Command__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRParserRuleCall_5_2()); }
	ruleEXPR
{ after(grammarAccess.getCommandAccess().getEXPRParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__3__Impl
	rule__Command__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_3()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__4__Impl
	rule__Command__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getInKeyword_5_4()); }

	'in' 

{ after(grammarAccess.getCommandAccess().getInKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__5__Impl
	rule__Command__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_5()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__6__Impl
	rule__Command__Group_5__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getEXPRParserRuleCall_5_6()); }
	ruleEXPR
{ after(grammarAccess.getCommandAccess().getEXPRParserRuleCall_5_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__7__Impl
	rule__Command__Group_5__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_7()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__8__Impl
	rule__Command__Group_5__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDoKeyword_5_8()); }

	'do' 

{ after(grammarAccess.getCommandAccess().getDoKeyword_5_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__9__Impl
	rule__Command__Group_5__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_9()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__10__Impl
	rule__Command__Group_5__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandsParserRuleCall_5_10()); }
	ruleCommands
{ after(grammarAccess.getCommandAccess().getCommandsParserRuleCall_5_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__11__Impl
	rule__Command__Group_5__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_11()); }
	ruleLCs
{ after(grammarAccess.getCommandAccess().getLCsParserRuleCall_5_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getOdKeyword_5_12()); }

	'od' 

{ after(grammarAccess.getCommandAccess().getOdKeyword_5_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Vars__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVARTerminalRuleCall_0()); }
	RULE_VAR
{ after(grammarAccess.getVarsAccess().getVARTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getGroup_1()); }
(rule__Vars__Group_1__0)?
{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vars__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__1__Impl
	rule__Vars__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getLCsParserRuleCall_1_1()); }
	ruleLCs
{ after(grammarAccess.getVarsAccess().getLCsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarsParserRuleCall_1_2()); }
	ruleVars
{ after(grammarAccess.getVarsAccess().getVarsParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group__0__Impl
	rule__EXPRS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getEXPRParserRuleCall_0()); }
	ruleEXPR
{ after(grammarAccess.getEXPRSAccess().getEXPRParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getGroup_1()); }
(rule__EXPRS__Group_1__0)?
{ after(grammarAccess.getEXPRSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__0__Impl
	rule__EXPRS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEXPRSAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__1__Impl
	rule__EXPRS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getLCsParserRuleCall_1_1()); }
	ruleLCs
{ after(grammarAccess.getEXPRSAccess().getLCsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getEXPRSParserRuleCall_1_2()); }
	ruleEXPRS
{ after(grammarAccess.getEXPRSAccess().getEXPRSParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRSIMPLE__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_0__0__Impl
	rule__EXPRSIMPLE__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_0__1__Impl
	rule__EXPRSIMPLE__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getConsKeyword_1_0_1()); }

	'cons' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getConsKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_0__2__Impl
	rule__EXPRSIMPLE__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_1_0_2()); }
	ruleLEXPR
{ after(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPRSIMPLE__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_1__0__Impl
	rule__EXPRSIMPLE__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_1__1__Impl
	rule__EXPRSIMPLE__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getListKeyword_1_1_1()); }

	'list' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getListKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_1__2__Impl
	rule__EXPRSIMPLE__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_1_1_2()); }
	ruleLEXPR
{ after(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_1_1_3()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPRSIMPLE__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_0__0__Impl
	rule__EXPRSIMPLE__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_0__1__Impl
	rule__EXPRSIMPLE__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getHdKeyword_2_0_1()); }

	'hd' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getHdKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_0__2__Impl
	rule__EXPRSIMPLE__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLCsParserRuleCall_2_0_2()); }
	ruleLCs
{ after(grammarAccess.getEXPRSIMPLEAccess().getLCsParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_0__3__Impl
	rule__EXPRSIMPLE__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getEXPRParserRuleCall_2_0_3()); }
	ruleEXPR
{ after(grammarAccess.getEXPRSIMPLEAccess().getEXPRParserRuleCall_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_2_0_4()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPRSIMPLE__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_1__0__Impl
	rule__EXPRSIMPLE__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_1__1__Impl
	rule__EXPRSIMPLE__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getTlKeyword_2_1_1()); }

	'tl' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getTlKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_1__2__Impl
	rule__EXPRSIMPLE__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLCsParserRuleCall_2_1_2()); }
	ruleLCs
{ after(grammarAccess.getEXPRSIMPLEAccess().getLCsParserRuleCall_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_1__3__Impl
	rule__EXPRSIMPLE__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getEXPRParserRuleCall_2_1_3()); }
	ruleEXPR
{ after(grammarAccess.getEXPRSIMPLEAccess().getEXPRParserRuleCall_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_2_1_4()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPRSIMPLE__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__0__Impl
	rule__EXPRSIMPLE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__1__Impl
	rule__EXPRSIMPLE__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSYMTerminalRuleCall_3_1()); }
	RULE_SYM
{ after(grammarAccess.getEXPRSIMPLEAccess().getSYMTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__2__Impl
	rule__EXPRSIMPLE__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_3_2()); }
	ruleLEXPR
{ after(grammarAccess.getEXPRSIMPLEAccess().getLEXPRParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LEXPR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__0__Impl
	rule__LEXPR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getLCsParserRuleCall_0()); }
	ruleLCs
{ after(grammarAccess.getLEXPRAccess().getLCsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LEXPR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__1__Impl
	rule__LEXPR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getEXPRParserRuleCall_1()); }
	ruleEXPR
{ after(grammarAccess.getLEXPRAccess().getEXPRParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LEXPR__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getLEXPRParserRuleCall_2()); }
(	ruleLEXPR)?
{ after(grammarAccess.getLEXPRAccess().getLEXPRParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRAND__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group__0__Impl
	rule__EXPRAND__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getEXPRORParserRuleCall_0()); }
	ruleEXPROR
{ after(grammarAccess.getEXPRANDAccess().getEXPRORParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getGroup_1()); }
(rule__EXPRAND__Group_1__0)?
{ after(grammarAccess.getEXPRANDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRAND__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__0__Impl
	rule__EXPRAND__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLCsParserRuleCall_1_0()); }
	ruleLCs
{ after(grammarAccess.getEXPRANDAccess().getLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__1__Impl
	rule__EXPRAND__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getEXPRANDAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__2__Impl
	rule__EXPRAND__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLCsParserRuleCall_1_2()); }
	ruleLCs
{ after(grammarAccess.getEXPRANDAccess().getLCsParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getEXPRANDParserRuleCall_1_3()); }
	ruleEXPRAND
{ after(grammarAccess.getEXPRANDAccess().getEXPRANDParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPROR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group__0__Impl
	rule__EXPROR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getEXPRNOTParserRuleCall_0()); }
	ruleEXPRNOT
{ after(grammarAccess.getEXPRORAccess().getEXPRNOTParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getGroup_1()); }
(rule__EXPROR__Group_1__0)?
{ after(grammarAccess.getEXPRORAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPROR__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__0__Impl
	rule__EXPROR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLCsParserRuleCall_1_0()); }
	ruleLCs
{ after(grammarAccess.getEXPRORAccess().getLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__1__Impl
	rule__EXPROR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getEXPRORAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__2__Impl
	rule__EXPROR__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLCsParserRuleCall_1_2()); }
	ruleLCs
{ after(grammarAccess.getEXPRORAccess().getLCsParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getEXPRORParserRuleCall_1_3()); }
	ruleEXPROR
{ after(grammarAccess.getEXPRORAccess().getEXPRORParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPRNOT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group__0__Impl
	rule__EXPRNOT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getGroup_0()); }
(rule__EXPRNOT__Group_0__0)?
{ after(grammarAccess.getEXPRNOTAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRNOT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getEXPREQParserRuleCall_1()); }
	ruleEXPREQ
{ after(grammarAccess.getEXPRNOTAccess().getEXPREQParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRNOT__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group_0__0__Impl
	rule__EXPRNOT__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getEXPRNOTAccess().getNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRNOT__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getLCsParserRuleCall_0_1()); }
	ruleLCs
{ after(grammarAccess.getEXPRNOTAccess().getLCsParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPREQ__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__0__Impl
	rule__EXPREQ__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getEXPRSIMPLEParserRuleCall_0_0()); }
	ruleEXPRSIMPLE
{ after(grammarAccess.getEXPREQAccess().getEXPRSIMPLEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__1__Impl
	rule__EXPREQ__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLCsParserRuleCall_0_1()); }
	ruleLCs
{ after(grammarAccess.getEXPREQAccess().getLCsParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__2__Impl
	rule__EXPREQ__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getEqualsSignQuestionMarkKeyword_0_2()); }

	'=?' 

{ after(grammarAccess.getEXPREQAccess().getEqualsSignQuestionMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__3__Impl
	rule__EXPREQ__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLCsParserRuleCall_0_3()); }
	ruleLCs
{ after(grammarAccess.getEXPREQAccess().getLCsParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getEXPRSIMPLEParserRuleCall_0_4()); }
	ruleEXPRSIMPLE
{ after(grammarAccess.getEXPREQAccess().getEXPRSIMPLEParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPREQ__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__0__Impl
	rule__EXPREQ__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEXPREQAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__1__Impl
	rule__EXPREQ__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getEXPRParserRuleCall_1_1()); }
	ruleEXPR
{ after(grammarAccess.getEXPREQAccess().getEXPRParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEXPREQAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__GreetingsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGreetingsProgramParserRuleCall_0()); }
	ruleProgram{ after(grammarAccess.getModelAccess().getGreetingsProgramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__FAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getFFunctionParserRuleCall_0_0()); }
	ruleFunction{ after(grammarAccess.getProgramAccess().getFFunctionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPpProgramParserRuleCall_1_1_0()); }
	ruleProgram{ after(grammarAccess.getProgramAccess().getPpProgramParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NomAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomSYMTerminalRuleCall_2_0()); }
	RULE_SYM{ after(grammarAccess.getFunctionAccess().getNomSYMTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDDefParserRuleCall_5_0()); }
	ruleDef{ after(grammarAccess.getFunctionAccess().getDDefParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__InAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getInInputParserRuleCall_2_0()); }
	ruleInput{ after(grammarAccess.getDefAccess().getInInputParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__CAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getCCommandsParserRuleCall_5_0()); }
	ruleCommands{ after(grammarAccess.getDefAccess().getCCommandsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__OAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getOOutputParserRuleCall_10_0()); }
	ruleOutput{ after(grammarAccess.getDefAccess().getOOutputParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVVARTerminalRuleCall_0_0_0()); }
	RULE_VAR{ after(grammarAccess.getInputAccess().getVVARTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__InAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getInInputParserRuleCall_0_3_0()); }
	ruleInput{ after(grammarAccess.getInputAccess().getInInputParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__YAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getYVARTerminalRuleCall_1_0()); }
	RULE_VAR{ after(grammarAccess.getInputAccess().getYVARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getNVARTerminalRuleCall_0_0_0()); }
	RULE_VAR{ after(grammarAccess.getOutputAccess().getNVARTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getOOutputParserRuleCall_0_3_0()); }
	ruleOutput{ after(grammarAccess.getOutputAccess().getOOutputParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__SAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getSVARTerminalRuleCall_1_0()); }
	RULE_VAR{ after(grammarAccess.getOutputAccess().getSVARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_VAR : 'A'..'Z' ('a'..'z'|'A'..'Z'|'0'..'9')* RULE_CONF;

RULE_SYM : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9')* RULE_CONF;

RULE_CONF : (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('a'..'z'|'A'..'Z'|'0'..'9')+)* ('?'|'!');

RULE_SP : ' ';

RULE_CR : '\n';

RULE_TAB : '\t';

RULE_LF : '\r';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


