/*
 * generated by Xtext
 */
grammar InternalLangage_while;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.Langage_whileGrammarAccess;

}

@parser::members {
 
 	private Langage_whileGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(Langage_whileGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getProgAssignment()); }
(rule__Model__ProgAssignment)*
{ after(grammarAccess.getModelAccess().getProgAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDef
entryRuleDef 
:
{ before(grammarAccess.getDefRule()); }
	 ruleDef
{ after(grammarAccess.getDefRule()); } 
	 EOF 
;

// Rule Def
ruleDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefAccess().getGroup()); }
(rule__Def__Group__0)
{ after(grammarAccess.getDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getAlternatives()); }
(rule__Input__Alternatives)
{ after(grammarAccess.getInputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutput
entryRuleOutput 
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputAccess().getAlternatives()); }
(rule__Output__Alternatives)
{ after(grammarAccess.getOutputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommands
entryRuleCommands 
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandsAccess().getGroup()); }
(rule__Commands__Group__0)
{ after(grammarAccess.getCommandsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNop
entryRuleNop 
:
{ before(grammarAccess.getNopRule()); }
	 ruleNop
{ after(grammarAccess.getNopRule()); } 
	 EOF 
;

// Rule Nop
ruleNop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNopAccess().getNopKeyword()); }

	'nop' 

{ after(grammarAccess.getNopAccess().getNopKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssign
entryRuleAssign 
:
{ before(grammarAccess.getAssignRule()); }
	 ruleAssign
{ after(grammarAccess.getAssignRule()); } 
	 EOF 
;

// Rule Assign
ruleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignAccess().getGroup()); }
(rule__Assign__Group__0)
{ after(grammarAccess.getAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor
entryRuleFor 
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAccess().getGroup()); }
(rule__For__Group__0)
{ after(grammarAccess.getForAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf
entryRuleIf 
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfAccess().getGroup()); }
(rule__If__Group__0)
{ after(grammarAccess.getIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeach
entryRuleForeach 
:
{ before(grammarAccess.getForeachRule()); }
	 ruleForeach
{ after(grammarAccess.getForeachRule()); } 
	 EOF 
;

// Rule Foreach
ruleForeach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachAccess().getGroup()); }
(rule__Foreach__Group__0)
{ after(grammarAccess.getForeachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVars
entryRuleVars 
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarsAccess().getGroup()); }
(rule__Vars__Group__0)
{ after(grammarAccess.getVarsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRS
entryRuleEXPRS 
:
{ before(grammarAccess.getEXPRSRule()); }
	 ruleEXPRS
{ after(grammarAccess.getEXPRSRule()); } 
	 EOF 
;

// Rule EXPRS
ruleEXPRS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRSAccess().getGroup()); }
(rule__EXPRS__Group__0)
{ after(grammarAccess.getEXPRSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPR
entryRuleEXPR 
:
{ before(grammarAccess.getEXPRRule()); }
	 ruleEXPR
{ after(grammarAccess.getEXPRRule()); } 
	 EOF 
;

// Rule EXPR
ruleEXPR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRAccess().getAlternatives()); }
(rule__EXPR__Alternatives)
{ after(grammarAccess.getEXPRAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRSIMPLE
entryRuleEXPRSIMPLE 
:
{ before(grammarAccess.getEXPRSIMPLERule()); }
	 ruleEXPRSIMPLE
{ after(grammarAccess.getEXPRSIMPLERule()); } 
	 EOF 
;

// Rule EXPRSIMPLE
ruleEXPRSIMPLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getAlternatives()); }
(rule__EXPRSIMPLE__Alternatives)
{ after(grammarAccess.getEXPRSIMPLEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLEXPR
entryRuleLEXPR 
:
{ before(grammarAccess.getLEXPRRule()); }
	 ruleLEXPR
{ after(grammarAccess.getLEXPRRule()); } 
	 EOF 
;

// Rule LEXPR
ruleLEXPR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLEXPRAccess().getGroup()); }
(rule__LEXPR__Group__0)
{ after(grammarAccess.getLEXPRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRAND
entryRuleEXPRAND 
:
{ before(grammarAccess.getEXPRANDRule()); }
	 ruleEXPRAND
{ after(grammarAccess.getEXPRANDRule()); } 
	 EOF 
;

// Rule EXPRAND
ruleEXPRAND
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRANDAccess().getGroup()); }
(rule__EXPRAND__Group__0)
{ after(grammarAccess.getEXPRANDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPROR
entryRuleEXPROR 
:
{ before(grammarAccess.getEXPRORRule()); }
	 ruleEXPROR
{ after(grammarAccess.getEXPRORRule()); } 
	 EOF 
;

// Rule EXPROR
ruleEXPROR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRORAccess().getGroup()); }
(rule__EXPROR__Group__0)
{ after(grammarAccess.getEXPRORAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRNOT
entryRuleEXPRNOT 
:
{ before(grammarAccess.getEXPRNOTRule()); }
	 ruleEXPRNOT
{ after(grammarAccess.getEXPRNOTRule()); } 
	 EOF 
;

// Rule EXPRNOT
ruleEXPRNOT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRNOTAccess().getGroup()); }
(rule__EXPRNOT__Group__0)
{ after(grammarAccess.getEXPRNOTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPREQ
entryRuleEXPREQ 
:
{ before(grammarAccess.getEXPREQRule()); }
	 ruleEXPREQ
{ after(grammarAccess.getEXPREQRule()); } 
	 EOF 
;

// Rule EXPREQ
ruleEXPREQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPREQAccess().getAlternatives()); }
(rule__EXPREQ__Alternatives)
{ after(grammarAccess.getEXPREQAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleLCs
entryRuleLCs 
:
{ before(grammarAccess.getLCsRule()); }
	 ruleLCs
{ after(grammarAccess.getLCsRule()); } 
	 EOF 
;

// Rule LCs
ruleLCs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLCsAccess().getLAssignment()); }
(rule__LCs__LAssignment)?
{ after(grammarAccess.getLCsAccess().getLAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLC
entryRuleLC 
:
{ before(grammarAccess.getLCRule()); }
	 ruleLC
{ after(grammarAccess.getLCRule()); } 
	 EOF 
;

// Rule LC
ruleLC
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLCAccess().getAlternatives()); }
(rule__LC__Alternatives)
{ after(grammarAccess.getLCAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Input__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getGroup_0()); }
(rule__Input__Group_0__0)
{ after(grammarAccess.getInputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInputAccess().getYAssignment_1()); }
(rule__Input__YAssignment_1)
{ after(grammarAccess.getInputAccess().getYAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getGroup_0()); }
(rule__Output__Group_0__0)
{ after(grammarAccess.getOutputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOutputAccess().getSAssignment_1()); }
(rule__Output__SAssignment_1)
{ after(grammarAccess.getOutputAccess().getSAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopAssignment_0()); }
(rule__Command__NopAssignment_0)
{ after(grammarAccess.getCommandAccess().getNopAssignment_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getAffectAssignment_1()); }
(rule__Command__AffectAssignment_1)
{ after(grammarAccess.getCommandAccess().getAffectAssignment_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getWhAssignment_2()); }
(rule__Command__WhAssignment_2)
{ after(grammarAccess.getCommandAccess().getWhAssignment_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getForrAssignment_3()); }
(rule__Command__ForrAssignment_3)
{ after(grammarAccess.getCommandAccess().getForrAssignment_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getForeAssignment_4()); }
(rule__Command__ForeAssignment_4)
{ after(grammarAccess.getCommandAccess().getForeAssignment_4()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getIffAssignment_5()); }
(rule__Command__IffAssignment_5)
{ after(grammarAccess.getCommandAccess().getIffAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getE1Assignment_0()); }
(rule__EXPR__E1Assignment_0)
{ after(grammarAccess.getEXPRAccess().getE1Assignment_0()); }
)

    |(
{ before(grammarAccess.getEXPRAccess().getExAssignment_1()); }
(rule__EXPR__ExAssignment_1)
{ after(grammarAccess.getEXPRAccess().getExAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getNilAssignment_0()); }
(rule__EXPRSIMPLE__NilAssignment_0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getNilAssignment_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getVAssignment_1()); }
(rule__EXPRSIMPLE__VAssignment_1)
{ after(grammarAccess.getEXPRSIMPLEAccess().getVAssignment_1()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_2()); }
(rule__EXPRSIMPLE__SymAssignment_2)
{ after(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_2()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_3()); }
(rule__EXPRSIMPLE__Group_3__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_4()); }
(rule__EXPRSIMPLE__Group_4__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getGroup_5()); }
(rule__EXPRSIMPLE__Group_5__0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__MotAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotConsKeyword_3_1_0_0()); }

	'cons' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getMotConsKeyword_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotListKeyword_3_1_0_1()); }

	'list' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getMotListKeyword_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__MotAlternatives_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotHdKeyword_4_1_0_0()); }

	'hd' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getMotHdKeyword_4_1_0_0()); }
)

    |(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotTlKeyword_4_1_0_1()); }

	'tl' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getMotTlKeyword_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getGroup_0()); }
(rule__EXPREQ__Group_0__0)
{ after(grammarAccess.getEXPREQAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEXPREQAccess().getGroup_1()); }
(rule__EXPREQ__Group_1__0)
{ after(grammarAccess.getEXPREQAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getAAssignment_0()); }
(rule__LC__AAssignment_0)
{ after(grammarAccess.getLCAccess().getAAssignment_0()); }
)

    |(
{ before(grammarAccess.getLCAccess().getZAssignment_1()); }
(rule__LC__ZAssignment_1)
{ after(grammarAccess.getLCAccess().getZAssignment_1()); }
)

    |(
{ before(grammarAccess.getLCAccess().getEAssignment_2()); }
(rule__LC__EAssignment_2)
{ after(grammarAccess.getLCAccess().getEAssignment_2()); }
)

    |(
{ before(grammarAccess.getLCAccess().getRAssignment_3()); }
(rule__LC__RAssignment_3)
{ after(grammarAccess.getLCAccess().getRAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNAssignment_1()); }
(rule__Function__NAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomAssignment_2()); }
(rule__Function__NomAssignment_2)
{ after(grammarAccess.getFunctionAccess().getNomAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTAssignment_4()); }
(rule__Function__TAssignment_4)
{ after(grammarAccess.getFunctionAccess().getTAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDAssignment_5()); }
(rule__Function__DAssignment_5)
{ after(grammarAccess.getFunctionAccess().getDAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Def__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__0__Impl
	rule__Def__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getReadKeyword_0()); }

	'read' 

{ after(grammarAccess.getDefAccess().getReadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__1__Impl
	rule__Def__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLAssignment_1()); }
(rule__Def__LAssignment_1)
{ after(grammarAccess.getDefAccess().getLAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__2__Impl
	rule__Def__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getInAssignment_2()); }
(rule__Def__InAssignment_2)
{ after(grammarAccess.getDefAccess().getInAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__3__Impl
	rule__Def__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getZAssignment_3()); }
(rule__Def__ZAssignment_3)
{ after(grammarAccess.getDefAccess().getZAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__4__Impl
	rule__Def__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getPercentSignKeyword_4()); }

	'%' 

{ after(grammarAccess.getDefAccess().getPercentSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__5__Impl
	rule__Def__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getVAssignment_5()); }
(rule__Def__VAssignment_5)
{ after(grammarAccess.getDefAccess().getVAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__6__Impl
	rule__Def__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getSAssignment_6()); }
(rule__Def__SAssignment_6)
{ after(grammarAccess.getDefAccess().getSAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__7__Impl
	rule__Def__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getPercentSignKeyword_7()); }

	'%' 

{ after(grammarAccess.getDefAccess().getPercentSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__8__Impl
	rule__Def__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getWriteKeyword_8()); }

	'write' 

{ after(grammarAccess.getDefAccess().getWriteKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__9__Impl
	rule__Def__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getUAssignment_9()); }
(rule__Def__UAssignment_9)
{ after(grammarAccess.getDefAccess().getUAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Def__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Def__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Def__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getOAssignment_10()); }
(rule__Def__OAssignment_10)
{ after(grammarAccess.getDefAccess().getOAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Input__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__0__Impl
	rule__Input__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVAssignment_0_0()); }
(rule__Input__VAssignment_0_0)
{ after(grammarAccess.getInputAccess().getVAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__1__Impl
	rule__Input__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__2__Impl
	rule__Input__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getZAssignment_0_2()); }
(rule__Input__ZAssignment_0_2)
{ after(grammarAccess.getInputAccess().getZAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getInAssignment_0_3()); }
(rule__Input__InAssignment_0_3)
{ after(grammarAccess.getInputAccess().getInAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Output__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__0__Impl
	rule__Output__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getNAssignment_0_0()); }
(rule__Output__NAssignment_0_0)
{ after(grammarAccess.getOutputAccess().getNAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__1__Impl
	rule__Output__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__2__Impl
	rule__Output__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getQAssignment_0_2()); }
(rule__Output__QAssignment_0_2)
{ after(grammarAccess.getOutputAccess().getQAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getOAssignment_0_3()); }
(rule__Output__OAssignment_0_3)
{ after(grammarAccess.getOutputAccess().getOAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Commands__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getAAssignment_0()); }
(rule__Commands__AAssignment_0)
{ after(grammarAccess.getCommandsAccess().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
(rule__Commands__Group_1__0)?
{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Commands__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__1__Impl
	rule__Commands__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getLAssignment_1_1()); }
(rule__Commands__LAssignment_1_1)
{ after(grammarAccess.getCommandsAccess().getLAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Commands__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getSAssignment_1_2()); }
(rule__Commands__SAssignment_1_2)
{ after(grammarAccess.getCommandsAccess().getSAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__0__Impl
	rule__Assign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getEAssignment_0()); }
(rule__Assign__EAssignment_0)
{ after(grammarAccess.getAssignAccess().getEAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__1__Impl
	rule__Assign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getLAssignment_1()); }
(rule__Assign__LAssignment_1)
{ after(grammarAccess.getAssignAccess().getLAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__2__Impl
	rule__Assign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getAssignAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__3__Impl
	rule__Assign__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getCAssignment_3()); }
(rule__Assign__CAssignment_3)
{ after(grammarAccess.getAssignAccess().getCAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assign__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getNAssignment_4()); }
(rule__Assign__NAssignment_4)
{ after(grammarAccess.getAssignAccess().getNAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLlAssignment_1()); }
(rule__While__LlAssignment_1)
{ after(grammarAccess.getWhileAccess().getLlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getEeAssignment_2()); }
(rule__While__EeAssignment_2)
{ after(grammarAccess.getWhileAccess().getEeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getCcAssignment_3()); }
(rule__While__CcAssignment_3)
{ after(grammarAccess.getWhileAccess().getCcAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getWhileAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__5__Impl
	rule__While__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getZAssignment_5()); }
(rule__While__ZAssignment_5)
{ after(grammarAccess.getWhileAccess().getZAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__6__Impl
	rule__While__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getKAssignment_6()); }
(rule__While__KAssignment_6)
{ after(grammarAccess.getWhileAccess().getKAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__7__Impl
	rule__While__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLcAssignment_7()); }
(rule__While__LcAssignment_7)
{ after(grammarAccess.getWhileAccess().getLcAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getOdKeyword_8()); }

	'od' 

{ after(grammarAccess.getWhileAccess().getOdKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__For__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getCcAssignment_1()); }
(rule__For__CcAssignment_1)
{ after(grammarAccess.getForAccess().getCcAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getHhAssignment_2()); }
(rule__For__HhAssignment_2)
{ after(grammarAccess.getForAccess().getHhAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getTtAssignment_3()); }
(rule__For__TtAssignment_3)
{ after(grammarAccess.getForAccess().getTtAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getForAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getVvAssignment_5()); }
(rule__For__VvAssignment_5)
{ after(grammarAccess.getForAccess().getVvAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__6__Impl
	rule__For__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getC1Assignment_6()); }
(rule__For__C1Assignment_6)
{ after(grammarAccess.getForAccess().getC1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__7__Impl
	rule__For__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getSsAssignment_7()); }
(rule__For__SsAssignment_7)
{ after(grammarAccess.getForAccess().getSsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getOdKeyword_8()); }

	'od' 

{ after(grammarAccess.getForAccess().getOdKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__If__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getMmAssignment_1()); }
(rule__If__MmAssignment_1)
{ after(grammarAccess.getIfAccess().getMmAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getJjAssignment_2()); }
(rule__If__JjAssignment_2)
{ after(grammarAccess.getIfAccess().getJjAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getKkAssignment_3()); }
(rule__If__KkAssignment_3)
{ after(grammarAccess.getIfAccess().getKkAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getThenKeyword_4()); }

	'then' 

{ after(grammarAccess.getIfAccess().getThenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getHgAssignment_5()); }
(rule__If__HgAssignment_5)
{ after(grammarAccess.getIfAccess().getHgAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__6__Impl
	rule__If__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getC2Assignment_6()); }
(rule__If__C2Assignment_6)
{ after(grammarAccess.getIfAccess().getC2Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__7__Impl
	rule__If__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGgAssignment_7()); }
(rule__If__GgAssignment_7)
{ after(grammarAccess.getIfAccess().getGgAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__8__Impl
	rule__If__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGroup_8()); }
(rule__If__Group_8__0)?
{ after(grammarAccess.getIfAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getFiKeyword_9()); }

	'fi' 

{ after(grammarAccess.getIfAccess().getFiKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__If__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_8__0__Impl
	rule__If__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getElseKeyword_8_0()); }

	'else' 

{ after(grammarAccess.getIfAccess().getElseKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_8__1__Impl
	rule__If__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getFfAssignment_8_1()); }
(rule__If__FfAssignment_8_1)
{ after(grammarAccess.getIfAccess().getFfAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_8__2__Impl
	rule__If__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getOAssignment_8_2()); }
(rule__If__OAssignment_8_2)
{ after(grammarAccess.getIfAccess().getOAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getDdAssignment_8_3()); }
(rule__If__DdAssignment_8_3)
{ after(grammarAccess.getIfAccess().getDdAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Foreach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__0__Impl
	rule__Foreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__1__Impl
	rule__Foreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getSqAssignment_1()); }
(rule__Foreach__SqAssignment_1)
{ after(grammarAccess.getForeachAccess().getSqAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__2__Impl
	rule__Foreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getWxAssignment_2()); }
(rule__Foreach__WxAssignment_2)
{ after(grammarAccess.getForeachAccess().getWxAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__3__Impl
	rule__Foreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLcAssignment_3()); }
(rule__Foreach__LcAssignment_3)
{ after(grammarAccess.getForeachAccess().getLcAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__4__Impl
	rule__Foreach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getForeachAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__5__Impl
	rule__Foreach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc2Assignment_5()); }
(rule__Foreach__Lc2Assignment_5)
{ after(grammarAccess.getForeachAccess().getLc2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__6__Impl
	rule__Foreach__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getE1Assignment_6()); }
(rule__Foreach__E1Assignment_6)
{ after(grammarAccess.getForeachAccess().getE1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__7__Impl
	rule__Foreach__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc3Assignment_7()); }
(rule__Foreach__Lc3Assignment_7)
{ after(grammarAccess.getForeachAccess().getLc3Assignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__8__Impl
	rule__Foreach__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getDoKeyword_8()); }

	'do' 

{ after(grammarAccess.getForeachAccess().getDoKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__9__Impl
	rule__Foreach__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc4Assignment_9()); }
(rule__Foreach__Lc4Assignment_9)
{ after(grammarAccess.getForeachAccess().getLc4Assignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__10__Impl
	rule__Foreach__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getC3Assignment_10()); }
(rule__Foreach__C3Assignment_10)
{ after(grammarAccess.getForeachAccess().getC3Assignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__11__Impl
	rule__Foreach__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc5Assignment_11()); }
(rule__Foreach__Lc5Assignment_11)
{ after(grammarAccess.getForeachAccess().getLc5Assignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Foreach__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getOdKeyword_12()); }

	'od' 

{ after(grammarAccess.getForeachAccess().getOdKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Vars__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getAAssignment_0()); }
(rule__Vars__AAssignment_0)
{ after(grammarAccess.getVarsAccess().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getGroup_1()); }
(rule__Vars__Group_1__0)?
{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vars__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__1__Impl
	rule__Vars__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getLAssignment_1_1()); }
(rule__Vars__LAssignment_1_1)
{ after(grammarAccess.getVarsAccess().getLAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getUAssignment_1_2()); }
(rule__Vars__UAssignment_1_2)
{ after(grammarAccess.getVarsAccess().getUAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group__0__Impl
	rule__EXPRS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getFAssignment_0()); }
(rule__EXPRS__FAssignment_0)
{ after(grammarAccess.getEXPRSAccess().getFAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getGroup_1()); }
(rule__EXPRS__Group_1__0)?
{ after(grammarAccess.getEXPRSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__0__Impl
	rule__EXPRS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEXPRSAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__1__Impl
	rule__EXPRS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getLAssignment_1_1()); }
(rule__EXPRS__LAssignment_1_1)
{ after(grammarAccess.getEXPRSAccess().getLAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRS__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getE2Assignment_1_2()); }
(rule__EXPRS__E2Assignment_1_2)
{ after(grammarAccess.getEXPRSAccess().getE2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRSIMPLE__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__0__Impl
	rule__EXPRSIMPLE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__1__Impl
	rule__EXPRSIMPLE__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_3_1()); }
(rule__EXPRSIMPLE__MotAssignment_3_1)
{ after(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__2__Impl
	rule__EXPRSIMPLE__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_3_2()); }
(rule__EXPRSIMPLE__LexAssignment_3_2)
{ after(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPRSIMPLE__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_4__0__Impl
	rule__EXPRSIMPLE__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_4__1__Impl
	rule__EXPRSIMPLE__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_4_1()); }
(rule__EXPRSIMPLE__MotAssignment_4_1)
{ after(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_4__2__Impl
	rule__EXPRSIMPLE__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLAssignment_4_2()); }
(rule__EXPRSIMPLE__LAssignment_4_2)
{ after(grammarAccess.getEXPRSIMPLEAccess().getLAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_4__3__Impl
	rule__EXPRSIMPLE__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getExAssignment_4_3()); }
(rule__EXPRSIMPLE__ExAssignment_4_3)
{ after(grammarAccess.getEXPRSIMPLEAccess().getExAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_4_4()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPRSIMPLE__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_5__0__Impl
	rule__EXPRSIMPLE__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_5__1__Impl
	rule__EXPRSIMPLE__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_5_1()); }
(rule__EXPRSIMPLE__SymAssignment_5_1)
{ after(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_5__2__Impl
	rule__EXPRSIMPLE__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_5_2()); }
(rule__EXPRSIMPLE__LexAssignment_5_2)
{ after(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRSIMPLE__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRSIMPLE__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_5_3()); }

	')' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LEXPR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__0__Impl
	rule__LEXPR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getFAssignment_0()); }
(rule__LEXPR__FAssignment_0)
{ after(grammarAccess.getLEXPRAccess().getFAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LEXPR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__1__Impl
	rule__LEXPR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getNAssignment_1()); }
(rule__LEXPR__NAssignment_1)
{ after(grammarAccess.getLEXPRAccess().getNAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LEXPR__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LEXPR__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getTAssignment_2()); }
(rule__LEXPR__TAssignment_2)?
{ after(grammarAccess.getLEXPRAccess().getTAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EXPRAND__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group__0__Impl
	rule__EXPRAND__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getFAssignment_0()); }
(rule__EXPRAND__FAssignment_0)
{ after(grammarAccess.getEXPRANDAccess().getFAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getGroup_1()); }
(rule__EXPRAND__Group_1__0)?
{ after(grammarAccess.getEXPRANDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRAND__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__0__Impl
	rule__EXPRAND__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLc1Assignment_1_0()); }
(rule__EXPRAND__Lc1Assignment_1_0)
{ after(grammarAccess.getEXPRANDAccess().getLc1Assignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__1__Impl
	rule__EXPRAND__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getEXPRANDAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__2__Impl
	rule__EXPRAND__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLc2Assignment_1_2()); }
(rule__EXPRAND__Lc2Assignment_1_2)
{ after(grammarAccess.getEXPRANDAccess().getLc2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRAND__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRAND__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getEeAssignment_1_3()); }
(rule__EXPRAND__EeAssignment_1_3)
{ after(grammarAccess.getEXPRANDAccess().getEeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPROR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group__0__Impl
	rule__EXPROR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getE1Assignment_0()); }
(rule__EXPROR__E1Assignment_0)
{ after(grammarAccess.getEXPRORAccess().getE1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getGroup_1()); }
(rule__EXPROR__Group_1__0)?
{ after(grammarAccess.getEXPRORAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPROR__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__0__Impl
	rule__EXPROR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLc1Assignment_1_0()); }
(rule__EXPROR__Lc1Assignment_1_0)
{ after(grammarAccess.getEXPRORAccess().getLc1Assignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__1__Impl
	rule__EXPROR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getEXPRORAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__2__Impl
	rule__EXPROR__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLc2Assignment_1_2()); }
(rule__EXPROR__Lc2Assignment_1_2)
{ after(grammarAccess.getEXPRORAccess().getLc2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPROR__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPROR__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getE2Assignment_1_3()); }
(rule__EXPROR__E2Assignment_1_3)
{ after(grammarAccess.getEXPRORAccess().getE2Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EXPRNOT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group__0__Impl
	rule__EXPRNOT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getGroup_0()); }
(rule__EXPRNOT__Group_0__0)?
{ after(grammarAccess.getEXPRNOTAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRNOT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getE1Assignment_1()); }
(rule__EXPRNOT__E1Assignment_1)
{ after(grammarAccess.getEXPRNOTAccess().getE1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPRNOT__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group_0__0__Impl
	rule__EXPRNOT__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getEXPRNOTAccess().getNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRNOT__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPRNOT__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getLc1Assignment_0_1()); }
(rule__EXPRNOT__Lc1Assignment_0_1)
{ after(grammarAccess.getEXPRNOTAccess().getLc1Assignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXPREQ__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__0__Impl
	rule__EXPREQ__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getE1Assignment_0_0()); }
(rule__EXPREQ__E1Assignment_0_0)
{ after(grammarAccess.getEXPREQAccess().getE1Assignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__1__Impl
	rule__EXPREQ__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getCccAssignment_0_1()); }
(rule__EXPREQ__CccAssignment_0_1)
{ after(grammarAccess.getEXPREQAccess().getCccAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__2__Impl
	rule__EXPREQ__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getEqualsSignQuestionMarkKeyword_0_2()); }

	'=?' 

{ after(grammarAccess.getEXPREQAccess().getEqualsSignQuestionMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__3__Impl
	rule__EXPREQ__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLc2Assignment_0_3()); }
(rule__EXPREQ__Lc2Assignment_0_3)
{ after(grammarAccess.getEXPREQAccess().getLc2Assignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getWAssignment_0_4()); }
(rule__EXPREQ__WAssignment_0_4)
{ after(grammarAccess.getEXPREQAccess().getWAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPREQ__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__0__Impl
	rule__EXPREQ__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEXPREQAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__1__Impl
	rule__EXPREQ__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getExAssignment_1_1()); }
(rule__EXPREQ__ExAssignment_1_1)
{ after(grammarAccess.getEXPREQAccess().getExAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPREQ__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPREQ__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEXPREQAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ProgAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getProgFunctionParserRuleCall_0()); }
	ruleFunction{ after(grammarAccess.getModelAccess().getProgFunctionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getFunctionAccess().getNLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NomAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomSYMTerminalRuleCall_2_0()); }
	RULE_SYM{ after(grammarAccess.getFunctionAccess().getNomSYMTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTLCsParserRuleCall_4_0()); }
	ruleLCs{ after(grammarAccess.getFunctionAccess().getTLCsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDDefParserRuleCall_5_0()); }
	ruleDef{ after(grammarAccess.getFunctionAccess().getDDefParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__LAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getLLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getDefAccess().getLLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__InAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getInInputParserRuleCall_2_0()); }
	ruleInput{ after(grammarAccess.getDefAccess().getInInputParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__ZAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getZLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getDefAccess().getZLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__VAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getVCommandsParserRuleCall_5_0()); }
	ruleCommands{ after(grammarAccess.getDefAccess().getVCommandsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__SAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getSLCsParserRuleCall_6_0()); }
	ruleLCs{ after(grammarAccess.getDefAccess().getSLCsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__UAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getULCsParserRuleCall_9_0()); }
	ruleLCs{ after(grammarAccess.getDefAccess().getULCsParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Def__OAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefAccess().getOOutputParserRuleCall_10_0()); }
	ruleOutput{ after(grammarAccess.getDefAccess().getOOutputParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVVARTerminalRuleCall_0_0_0()); }
	RULE_VAR{ after(grammarAccess.getInputAccess().getVVARTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ZAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getZLCsParserRuleCall_0_2_0()); }
	ruleLCs{ after(grammarAccess.getInputAccess().getZLCsParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__InAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getInInputParserRuleCall_0_3_0()); }
	ruleInput{ after(grammarAccess.getInputAccess().getInInputParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__YAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getYVARTerminalRuleCall_1_0()); }
	RULE_VAR{ after(grammarAccess.getInputAccess().getYVARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__NAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getNVARTerminalRuleCall_0_0_0()); }
	RULE_VAR{ after(grammarAccess.getOutputAccess().getNVARTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__QAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getQLCsParserRuleCall_0_2_0()); }
	ruleLCs{ after(grammarAccess.getOutputAccess().getQLCsParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getOOutputParserRuleCall_0_3_0()); }
	ruleOutput{ after(grammarAccess.getOutputAccess().getOOutputParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__SAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getSVARTerminalRuleCall_1_0()); }
	RULE_VAR{ after(grammarAccess.getOutputAccess().getSVARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getACommandParserRuleCall_0_0()); }
	ruleCommand{ after(grammarAccess.getCommandsAccess().getACommandParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__LAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getLLCsParserRuleCall_1_1_0()); }
	ruleLCs{ after(grammarAccess.getCommandsAccess().getLLCsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__SAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getSCommandsParserRuleCall_1_2_0()); }
	ruleCommands{ after(grammarAccess.getCommandsAccess().getSCommandsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NopAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopNopParserRuleCall_0_0()); }
	ruleNop{ after(grammarAccess.getCommandAccess().getNopNopParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__AffectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getAffectAssignParserRuleCall_1_0()); }
	ruleAssign{ after(grammarAccess.getCommandAccess().getAffectAssignParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__WhAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getWhWhileParserRuleCall_2_0()); }
	ruleWhile{ after(grammarAccess.getCommandAccess().getWhWhileParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ForrAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getForrForParserRuleCall_3_0()); }
	ruleFor{ after(grammarAccess.getCommandAccess().getForrForParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ForeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getForeForeachParserRuleCall_4_0()); }
	ruleForeach{ after(grammarAccess.getCommandAccess().getForeForeachParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__IffAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getIffIfParserRuleCall_5_0()); }
	ruleIf{ after(grammarAccess.getCommandAccess().getIffIfParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__EAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getEVarsParserRuleCall_0_0()); }
	ruleVars{ after(grammarAccess.getAssignAccess().getEVarsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__LAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getLLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getAssignAccess().getLLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__CAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getCLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getAssignAccess().getCLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__NAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignAccess().getNEXPRSParserRuleCall_4_0()); }
	ruleEXPRS{ after(grammarAccess.getAssignAccess().getNEXPRSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__LlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLlLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getWhileAccess().getLlLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__EeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getEeEXPRParserRuleCall_2_0()); }
	ruleEXPR{ after(grammarAccess.getWhileAccess().getEeEXPRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__CcAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getCcLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getWhileAccess().getCcLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__ZAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getZLCsParserRuleCall_5_0()); }
	ruleLCs{ after(grammarAccess.getWhileAccess().getZLCsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__KAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getKCommandsParserRuleCall_6_0()); }
	ruleCommands{ after(grammarAccess.getWhileAccess().getKCommandsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__LcAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLcLCsParserRuleCall_7_0()); }
	ruleLCs{ after(grammarAccess.getWhileAccess().getLcLCsParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__CcAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getCcLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getForAccess().getCcLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__HhAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getHhEXPRParserRuleCall_2_0()); }
	ruleEXPR{ after(grammarAccess.getForAccess().getHhEXPRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__TtAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getTtLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getForAccess().getTtLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__VvAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getVvLCsParserRuleCall_5_0()); }
	ruleLCs{ after(grammarAccess.getForAccess().getVvLCsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__C1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getC1CommandsParserRuleCall_6_0()); }
	ruleCommands{ after(grammarAccess.getForAccess().getC1CommandsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__SsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getSsLCsParserRuleCall_7_0()); }
	ruleLCs{ after(grammarAccess.getForAccess().getSsLCsParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__MmAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getMmLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getMmLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__JjAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getJjEXPRParserRuleCall_2_0()); }
	ruleEXPR{ after(grammarAccess.getIfAccess().getJjEXPRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__KkAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getKkLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getKkLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__HgAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getHgLCsParserRuleCall_5_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getHgLCsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__C2Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getC2CommandsParserRuleCall_6_0()); }
	ruleCommands{ after(grammarAccess.getIfAccess().getC2CommandsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__GgAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getGgLCsParserRuleCall_7_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getGgLCsParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__FfAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getFfLCsParserRuleCall_8_1_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getFfLCsParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__OAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getOCommandsParserRuleCall_8_2_0()); }
	ruleCommands{ after(grammarAccess.getIfAccess().getOCommandsParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If__DdAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfAccess().getDdLCsParserRuleCall_8_3_0()); }
	ruleLCs{ after(grammarAccess.getIfAccess().getDdLCsParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__SqAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getSqLCsParserRuleCall_1_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getSqLCsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__WxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getWxEXPRParserRuleCall_2_0()); }
	ruleEXPR{ after(grammarAccess.getForeachAccess().getWxEXPRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__LcAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLcLCsParserRuleCall_3_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getLcLCsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Lc2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc2LCsParserRuleCall_5_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getLc2LCsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__E1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getE1EXPRParserRuleCall_6_0()); }
	ruleEXPR{ after(grammarAccess.getForeachAccess().getE1EXPRParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Lc3Assignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc3LCsParserRuleCall_7_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getLc3LCsParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Lc4Assignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc4LCsParserRuleCall_9_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getLc4LCsParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__C3Assignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getC3CommandsParserRuleCall_10_0()); }
	ruleCommands{ after(grammarAccess.getForeachAccess().getC3CommandsParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Lc5Assignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachAccess().getLc5LCsParserRuleCall_11_0()); }
	ruleLCs{ after(grammarAccess.getForeachAccess().getLc5LCsParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getAVARTerminalRuleCall_0_0()); }
	RULE_VAR{ after(grammarAccess.getVarsAccess().getAVARTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__LAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getLLCsParserRuleCall_1_1_0()); }
	ruleLCs{ after(grammarAccess.getVarsAccess().getLLCsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__UAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getUVarsParserRuleCall_1_2_0()); }
	ruleVars{ after(grammarAccess.getVarsAccess().getUVarsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__FAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getFEXPRParserRuleCall_0_0()); }
	ruleEXPR{ after(grammarAccess.getEXPRSAccess().getFEXPRParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__LAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getLLCsParserRuleCall_1_1_0()); }
	ruleLCs{ after(grammarAccess.getEXPRSAccess().getLLCsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRS__E2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSAccess().getE2EXPRSParserRuleCall_1_2_0()); }
	ruleEXPRS{ after(grammarAccess.getEXPRSAccess().getE2EXPRSParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__E1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getE1EXPRSIMPLEParserRuleCall_0_0()); }
	ruleEXPRSIMPLE{ after(grammarAccess.getEXPRAccess().getE1EXPRSIMPLEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__ExAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getExEXPRANDParserRuleCall_1_0()); }
	ruleEXPRAND{ after(grammarAccess.getEXPRAccess().getExEXPRANDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__NilAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getNilNilKeyword_0_0()); }
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getNilNilKeyword_0_0()); }

	'nil' 

{ after(grammarAccess.getEXPRSIMPLEAccess().getNilNilKeyword_0_0()); }
)

{ after(grammarAccess.getEXPRSIMPLEAccess().getNilNilKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__VAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getVVARTerminalRuleCall_1_0()); }
	RULE_VAR{ after(grammarAccess.getEXPRSIMPLEAccess().getVVARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__SymAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSymSYMTerminalRuleCall_2_0()); }
	RULE_SYM{ after(grammarAccess.getEXPRSIMPLEAccess().getSymSYMTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__MotAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_3_1_0()); }
(rule__EXPRSIMPLE__MotAlternatives_3_1_0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__LexAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLexLEXPRParserRuleCall_3_2_0()); }
	ruleLEXPR{ after(grammarAccess.getEXPRSIMPLEAccess().getLexLEXPRParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__MotAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_4_1_0()); }
(rule__EXPRSIMPLE__MotAlternatives_4_1_0)
{ after(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__LAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLLCsParserRuleCall_4_2_0()); }
	ruleLCs{ after(grammarAccess.getEXPRSIMPLEAccess().getLLCsParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__ExAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getExEXPRParserRuleCall_4_3_0()); }
	ruleEXPR{ after(grammarAccess.getEXPRSIMPLEAccess().getExEXPRParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__SymAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getSymSYMTerminalRuleCall_5_1_0()); }
	RULE_SYM{ after(grammarAccess.getEXPRSIMPLEAccess().getSymSYMTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRSIMPLE__LexAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRSIMPLEAccess().getLexLEXPRParserRuleCall_5_2_0()); }
	ruleLEXPR{ after(grammarAccess.getEXPRSIMPLEAccess().getLexLEXPRParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__FAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getFLCsParserRuleCall_0_0()); }
	ruleLCs{ after(grammarAccess.getLEXPRAccess().getFLCsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__NAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getNEXPRParserRuleCall_1_0()); }
	ruleEXPR{ after(grammarAccess.getLEXPRAccess().getNEXPRParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LEXPR__TAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLEXPRAccess().getTLEXPRParserRuleCall_2_0()); }
	ruleLEXPR{ after(grammarAccess.getLEXPRAccess().getTLEXPRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__FAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getFEXPRORParserRuleCall_0_0()); }
	ruleEXPROR{ after(grammarAccess.getEXPRANDAccess().getFEXPRORParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Lc1Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLc1LCsParserRuleCall_1_0_0()); }
	ruleLCs{ after(grammarAccess.getEXPRANDAccess().getLc1LCsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__Lc2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getLc2LCsParserRuleCall_1_2_0()); }
	ruleLCs{ after(grammarAccess.getEXPRANDAccess().getLc2LCsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRAND__EeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRANDAccess().getEeEXPRANDParserRuleCall_1_3_0()); }
	ruleEXPRAND{ after(grammarAccess.getEXPRANDAccess().getEeEXPRANDParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__E1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getE1EXPRNOTParserRuleCall_0_0()); }
	ruleEXPRNOT{ after(grammarAccess.getEXPRORAccess().getE1EXPRNOTParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Lc1Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLc1LCsParserRuleCall_1_0_0()); }
	ruleLCs{ after(grammarAccess.getEXPRORAccess().getLc1LCsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__Lc2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getLc2LCsParserRuleCall_1_2_0()); }
	ruleLCs{ after(grammarAccess.getEXPRORAccess().getLc2LCsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPROR__E2Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRORAccess().getE2EXPRORParserRuleCall_1_3_0()); }
	ruleEXPROR{ after(grammarAccess.getEXPRORAccess().getE2EXPRORParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__Lc1Assignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getLc1LCsParserRuleCall_0_1_0()); }
	ruleLCs{ after(grammarAccess.getEXPRNOTAccess().getLc1LCsParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRNOT__E1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRNOTAccess().getE1EXPREQParserRuleCall_1_0()); }
	ruleEXPREQ{ after(grammarAccess.getEXPRNOTAccess().getE1EXPREQParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__E1Assignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getE1EXPRSIMPLEParserRuleCall_0_0_0()); }
	ruleEXPRSIMPLE{ after(grammarAccess.getEXPREQAccess().getE1EXPRSIMPLEParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__CccAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getCccLCsParserRuleCall_0_1_0()); }
	ruleLCs{ after(grammarAccess.getEXPREQAccess().getCccLCsParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__Lc2Assignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getLc2LCsParserRuleCall_0_3_0()); }
	ruleLCs{ after(grammarAccess.getEXPREQAccess().getLc2LCsParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__WAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getWEXPRSIMPLEParserRuleCall_0_4_0()); }
	ruleEXPRSIMPLE{ after(grammarAccess.getEXPREQAccess().getWEXPRSIMPLEParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPREQ__ExAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPREQAccess().getExEXPRParserRuleCall_1_1_0()); }
	ruleEXPR{ after(grammarAccess.getEXPREQAccess().getExEXPRParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LCs__LAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCsAccess().getLLCParserRuleCall_0()); }
	ruleLC{ after(grammarAccess.getLCsAccess().getLLCParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getASPTerminalRuleCall_0_0()); }
	RULE_SP{ after(grammarAccess.getLCAccess().getASPTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__ZAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getZCRTerminalRuleCall_1_0()); }
	RULE_CR{ after(grammarAccess.getLCAccess().getZCRTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__EAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getETABTerminalRuleCall_2_0()); }
	RULE_TAB{ after(grammarAccess.getLCAccess().getETABTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LC__RAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCAccess().getRLFTerminalRuleCall_3_0()); }
	RULE_LF{ after(grammarAccess.getLCAccess().getRLFTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_VAR : 'A'..'Z' ('a'..'z'|'A'..'Z'|'0'..'9')* RULE_CONF;

RULE_SYM : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9')* RULE_CONF;

RULE_CONF : (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('a'..'z'|'A'..'Z'|'0'..'9')+)* ('?'|'!');

RULE_SP : ' ';

RULE_CR : '\n';

RULE_TAB : '\t';

RULE_LF : '\r';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


