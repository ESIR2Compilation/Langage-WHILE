/*
 * generated by Xtext
 */
package org.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.services.Langage_whileGrammarAccess;

public class Langage_whileParser extends AbstractContentAssistParser {
	
	@Inject
	private Langage_whileGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.ui.contentassist.antlr.internal.InternalLangage_whileParser createParser() {
		org.xtext.ui.contentassist.antlr.internal.InternalLangage_whileParser result = new org.xtext.ui.contentassist.antlr.internal.InternalLangage_whileParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getInputAccess().getAlternatives(), "rule__Input__Alternatives");
					put(grammarAccess.getOutputAccess().getAlternatives(), "rule__Output__Alternatives");
					put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
					put(grammarAccess.getEXPRAccess().getAlternatives(), "rule__EXPR__Alternatives");
					put(grammarAccess.getEXPRSIMPLEAccess().getAlternatives(), "rule__EXPRSIMPLE__Alternatives");
					put(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_3_1_0(), "rule__EXPRSIMPLE__MotAlternatives_3_1_0");
					put(grammarAccess.getEXPRSIMPLEAccess().getMotAlternatives_4_1_0(), "rule__EXPRSIMPLE__MotAlternatives_4_1_0");
					put(grammarAccess.getEXPREQAccess().getAlternatives(), "rule__EXPREQ__Alternatives");
					put(grammarAccess.getLCAccess().getAlternatives(), "rule__LC__Alternatives");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getDefAccess().getGroup(), "rule__Def__Group__0");
					put(grammarAccess.getInputAccess().getGroup_0(), "rule__Input__Group_0__0");
					put(grammarAccess.getOutputAccess().getGroup_0(), "rule__Output__Group_0__0");
					put(grammarAccess.getCommandsAccess().getGroup(), "rule__Commands__Group__0");
					put(grammarAccess.getCommandsAccess().getGroup_1(), "rule__Commands__Group_1__0");
					put(grammarAccess.getAssignAccess().getGroup(), "rule__Assign__Group__0");
					put(grammarAccess.getWhileAccess().getGroup(), "rule__While__Group__0");
					put(grammarAccess.getForAccess().getGroup(), "rule__For__Group__0");
					put(grammarAccess.getIfAccess().getGroup(), "rule__If__Group__0");
					put(grammarAccess.getIfAccess().getGroup_8(), "rule__If__Group_8__0");
					put(grammarAccess.getForeachAccess().getGroup(), "rule__Foreach__Group__0");
					put(grammarAccess.getVarsAccess().getGroup(), "rule__Vars__Group__0");
					put(grammarAccess.getVarsAccess().getGroup_1(), "rule__Vars__Group_1__0");
					put(grammarAccess.getEXPRSAccess().getGroup(), "rule__EXPRS__Group__0");
					put(grammarAccess.getEXPRSAccess().getGroup_1(), "rule__EXPRS__Group_1__0");
					put(grammarAccess.getEXPRSIMPLEAccess().getGroup_3(), "rule__EXPRSIMPLE__Group_3__0");
					put(grammarAccess.getEXPRSIMPLEAccess().getGroup_4(), "rule__EXPRSIMPLE__Group_4__0");
					put(grammarAccess.getEXPRSIMPLEAccess().getGroup_5(), "rule__EXPRSIMPLE__Group_5__0");
					put(grammarAccess.getLEXPRAccess().getGroup(), "rule__LEXPR__Group__0");
					put(grammarAccess.getEXPRANDAccess().getGroup(), "rule__EXPRAND__Group__0");
					put(grammarAccess.getEXPRANDAccess().getGroup_1(), "rule__EXPRAND__Group_1__0");
					put(grammarAccess.getEXPRORAccess().getGroup(), "rule__EXPROR__Group__0");
					put(grammarAccess.getEXPRORAccess().getGroup_1(), "rule__EXPROR__Group_1__0");
					put(grammarAccess.getEXPRNOTAccess().getGroup(), "rule__EXPRNOT__Group__0");
					put(grammarAccess.getEXPRNOTAccess().getGroup_0(), "rule__EXPRNOT__Group_0__0");
					put(grammarAccess.getEXPREQAccess().getGroup_0(), "rule__EXPREQ__Group_0__0");
					put(grammarAccess.getEXPREQAccess().getGroup_1(), "rule__EXPREQ__Group_1__0");
					put(grammarAccess.getModelAccess().getProgAssignment(), "rule__Model__ProgAssignment");
					put(grammarAccess.getFunctionAccess().getNAssignment_1(), "rule__Function__NAssignment_1");
					put(grammarAccess.getFunctionAccess().getNomAssignment_2(), "rule__Function__NomAssignment_2");
					put(grammarAccess.getFunctionAccess().getTAssignment_4(), "rule__Function__TAssignment_4");
					put(grammarAccess.getFunctionAccess().getDAssignment_5(), "rule__Function__DAssignment_5");
					put(grammarAccess.getDefAccess().getLAssignment_1(), "rule__Def__LAssignment_1");
					put(grammarAccess.getDefAccess().getInAssignment_2(), "rule__Def__InAssignment_2");
					put(grammarAccess.getDefAccess().getZAssignment_3(), "rule__Def__ZAssignment_3");
					put(grammarAccess.getDefAccess().getVAssignment_5(), "rule__Def__VAssignment_5");
					put(grammarAccess.getDefAccess().getSAssignment_6(), "rule__Def__SAssignment_6");
					put(grammarAccess.getDefAccess().getUAssignment_9(), "rule__Def__UAssignment_9");
					put(grammarAccess.getDefAccess().getOAssignment_10(), "rule__Def__OAssignment_10");
					put(grammarAccess.getInputAccess().getVAssignment_0_0(), "rule__Input__VAssignment_0_0");
					put(grammarAccess.getInputAccess().getZAssignment_0_2(), "rule__Input__ZAssignment_0_2");
					put(grammarAccess.getInputAccess().getInAssignment_0_3(), "rule__Input__InAssignment_0_3");
					put(grammarAccess.getInputAccess().getYAssignment_1(), "rule__Input__YAssignment_1");
					put(grammarAccess.getOutputAccess().getNAssignment_0_0(), "rule__Output__NAssignment_0_0");
					put(grammarAccess.getOutputAccess().getQAssignment_0_2(), "rule__Output__QAssignment_0_2");
					put(grammarAccess.getOutputAccess().getOAssignment_0_3(), "rule__Output__OAssignment_0_3");
					put(grammarAccess.getOutputAccess().getSAssignment_1(), "rule__Output__SAssignment_1");
					put(grammarAccess.getCommandsAccess().getAAssignment_0(), "rule__Commands__AAssignment_0");
					put(grammarAccess.getCommandsAccess().getLAssignment_1_1(), "rule__Commands__LAssignment_1_1");
					put(grammarAccess.getCommandsAccess().getSAssignment_1_2(), "rule__Commands__SAssignment_1_2");
					put(grammarAccess.getCommandAccess().getNopAssignment_0(), "rule__Command__NopAssignment_0");
					put(grammarAccess.getCommandAccess().getAffectAssignment_1(), "rule__Command__AffectAssignment_1");
					put(grammarAccess.getCommandAccess().getWhAssignment_2(), "rule__Command__WhAssignment_2");
					put(grammarAccess.getCommandAccess().getForrAssignment_3(), "rule__Command__ForrAssignment_3");
					put(grammarAccess.getCommandAccess().getForeAssignment_4(), "rule__Command__ForeAssignment_4");
					put(grammarAccess.getCommandAccess().getIffAssignment_5(), "rule__Command__IffAssignment_5");
					put(grammarAccess.getAssignAccess().getEAssignment_0(), "rule__Assign__EAssignment_0");
					put(grammarAccess.getAssignAccess().getLAssignment_1(), "rule__Assign__LAssignment_1");
					put(grammarAccess.getAssignAccess().getCAssignment_3(), "rule__Assign__CAssignment_3");
					put(grammarAccess.getAssignAccess().getNAssignment_4(), "rule__Assign__NAssignment_4");
					put(grammarAccess.getWhileAccess().getLlAssignment_1(), "rule__While__LlAssignment_1");
					put(grammarAccess.getWhileAccess().getEeAssignment_2(), "rule__While__EeAssignment_2");
					put(grammarAccess.getWhileAccess().getCcAssignment_3(), "rule__While__CcAssignment_3");
					put(grammarAccess.getWhileAccess().getZAssignment_5(), "rule__While__ZAssignment_5");
					put(grammarAccess.getWhileAccess().getKAssignment_6(), "rule__While__KAssignment_6");
					put(grammarAccess.getWhileAccess().getLcAssignment_7(), "rule__While__LcAssignment_7");
					put(grammarAccess.getForAccess().getCcAssignment_1(), "rule__For__CcAssignment_1");
					put(grammarAccess.getForAccess().getHhAssignment_2(), "rule__For__HhAssignment_2");
					put(grammarAccess.getForAccess().getTtAssignment_3(), "rule__For__TtAssignment_3");
					put(grammarAccess.getForAccess().getVvAssignment_5(), "rule__For__VvAssignment_5");
					put(grammarAccess.getForAccess().getC1Assignment_6(), "rule__For__C1Assignment_6");
					put(grammarAccess.getForAccess().getSsAssignment_7(), "rule__For__SsAssignment_7");
					put(grammarAccess.getIfAccess().getMmAssignment_1(), "rule__If__MmAssignment_1");
					put(grammarAccess.getIfAccess().getJjAssignment_2(), "rule__If__JjAssignment_2");
					put(grammarAccess.getIfAccess().getKkAssignment_3(), "rule__If__KkAssignment_3");
					put(grammarAccess.getIfAccess().getHgAssignment_5(), "rule__If__HgAssignment_5");
					put(grammarAccess.getIfAccess().getC2Assignment_6(), "rule__If__C2Assignment_6");
					put(grammarAccess.getIfAccess().getGgAssignment_7(), "rule__If__GgAssignment_7");
					put(grammarAccess.getIfAccess().getFfAssignment_8_1(), "rule__If__FfAssignment_8_1");
					put(grammarAccess.getIfAccess().getOAssignment_8_2(), "rule__If__OAssignment_8_2");
					put(grammarAccess.getIfAccess().getDdAssignment_8_3(), "rule__If__DdAssignment_8_3");
					put(grammarAccess.getForeachAccess().getSqAssignment_1(), "rule__Foreach__SqAssignment_1");
					put(grammarAccess.getForeachAccess().getWxAssignment_2(), "rule__Foreach__WxAssignment_2");
					put(grammarAccess.getForeachAccess().getLcAssignment_3(), "rule__Foreach__LcAssignment_3");
					put(grammarAccess.getForeachAccess().getLc2Assignment_5(), "rule__Foreach__Lc2Assignment_5");
					put(grammarAccess.getForeachAccess().getE1Assignment_6(), "rule__Foreach__E1Assignment_6");
					put(grammarAccess.getForeachAccess().getLc3Assignment_7(), "rule__Foreach__Lc3Assignment_7");
					put(grammarAccess.getForeachAccess().getLc4Assignment_9(), "rule__Foreach__Lc4Assignment_9");
					put(grammarAccess.getForeachAccess().getC3Assignment_10(), "rule__Foreach__C3Assignment_10");
					put(grammarAccess.getForeachAccess().getLc5Assignment_11(), "rule__Foreach__Lc5Assignment_11");
					put(grammarAccess.getVarsAccess().getAAssignment_0(), "rule__Vars__AAssignment_0");
					put(grammarAccess.getVarsAccess().getLAssignment_1_1(), "rule__Vars__LAssignment_1_1");
					put(grammarAccess.getVarsAccess().getUAssignment_1_2(), "rule__Vars__UAssignment_1_2");
					put(grammarAccess.getEXPRSAccess().getFAssignment_0(), "rule__EXPRS__FAssignment_0");
					put(grammarAccess.getEXPRSAccess().getLAssignment_1_1(), "rule__EXPRS__LAssignment_1_1");
					put(grammarAccess.getEXPRSAccess().getE2Assignment_1_2(), "rule__EXPRS__E2Assignment_1_2");
					put(grammarAccess.getEXPRAccess().getE1Assignment_0(), "rule__EXPR__E1Assignment_0");
					put(grammarAccess.getEXPRAccess().getExAssignment_1(), "rule__EXPR__ExAssignment_1");
					put(grammarAccess.getEXPRSIMPLEAccess().getNilAssignment_0(), "rule__EXPRSIMPLE__NilAssignment_0");
					put(grammarAccess.getEXPRSIMPLEAccess().getVAssignment_1(), "rule__EXPRSIMPLE__VAssignment_1");
					put(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_2(), "rule__EXPRSIMPLE__SymAssignment_2");
					put(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_3_1(), "rule__EXPRSIMPLE__MotAssignment_3_1");
					put(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_3_2(), "rule__EXPRSIMPLE__LexAssignment_3_2");
					put(grammarAccess.getEXPRSIMPLEAccess().getMotAssignment_4_1(), "rule__EXPRSIMPLE__MotAssignment_4_1");
					put(grammarAccess.getEXPRSIMPLEAccess().getLAssignment_4_2(), "rule__EXPRSIMPLE__LAssignment_4_2");
					put(grammarAccess.getEXPRSIMPLEAccess().getExAssignment_4_3(), "rule__EXPRSIMPLE__ExAssignment_4_3");
					put(grammarAccess.getEXPRSIMPLEAccess().getSymAssignment_5_1(), "rule__EXPRSIMPLE__SymAssignment_5_1");
					put(grammarAccess.getEXPRSIMPLEAccess().getLexAssignment_5_2(), "rule__EXPRSIMPLE__LexAssignment_5_2");
					put(grammarAccess.getLEXPRAccess().getFAssignment_0(), "rule__LEXPR__FAssignment_0");
					put(grammarAccess.getLEXPRAccess().getNAssignment_1(), "rule__LEXPR__NAssignment_1");
					put(grammarAccess.getLEXPRAccess().getTAssignment_2(), "rule__LEXPR__TAssignment_2");
					put(grammarAccess.getEXPRANDAccess().getFAssignment_0(), "rule__EXPRAND__FAssignment_0");
					put(grammarAccess.getEXPRANDAccess().getLc1Assignment_1_0(), "rule__EXPRAND__Lc1Assignment_1_0");
					put(grammarAccess.getEXPRANDAccess().getLc2Assignment_1_2(), "rule__EXPRAND__Lc2Assignment_1_2");
					put(grammarAccess.getEXPRANDAccess().getEeAssignment_1_3(), "rule__EXPRAND__EeAssignment_1_3");
					put(grammarAccess.getEXPRORAccess().getE1Assignment_0(), "rule__EXPROR__E1Assignment_0");
					put(grammarAccess.getEXPRORAccess().getLc1Assignment_1_0(), "rule__EXPROR__Lc1Assignment_1_0");
					put(grammarAccess.getEXPRORAccess().getLc2Assignment_1_2(), "rule__EXPROR__Lc2Assignment_1_2");
					put(grammarAccess.getEXPRORAccess().getE2Assignment_1_3(), "rule__EXPROR__E2Assignment_1_3");
					put(grammarAccess.getEXPRNOTAccess().getLc1Assignment_0_1(), "rule__EXPRNOT__Lc1Assignment_0_1");
					put(grammarAccess.getEXPRNOTAccess().getE1Assignment_1(), "rule__EXPRNOT__E1Assignment_1");
					put(grammarAccess.getEXPREQAccess().getE1Assignment_0_0(), "rule__EXPREQ__E1Assignment_0_0");
					put(grammarAccess.getEXPREQAccess().getCccAssignment_0_1(), "rule__EXPREQ__CccAssignment_0_1");
					put(grammarAccess.getEXPREQAccess().getLc2Assignment_0_3(), "rule__EXPREQ__Lc2Assignment_0_3");
					put(grammarAccess.getEXPREQAccess().getWAssignment_0_4(), "rule__EXPREQ__WAssignment_0_4");
					put(grammarAccess.getEXPREQAccess().getExAssignment_1_1(), "rule__EXPREQ__ExAssignment_1_1");
					put(grammarAccess.getVariableAccess().getNAssignment(), "rule__Variable__NAssignment");
					put(grammarAccess.getLCsAccess().getLAssignment(), "rule__LCs__LAssignment");
					put(grammarAccess.getLCAccess().getAAssignment_0(), "rule__LC__AAssignment_0");
					put(grammarAccess.getLCAccess().getZAssignment_1(), "rule__LC__ZAssignment_1");
					put(grammarAccess.getLCAccess().getEAssignment_2(), "rule__LC__EAssignment_2");
					put(grammarAccess.getLCAccess().getRAssignment_3(), "rule__LC__RAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.ui.contentassist.antlr.internal.InternalLangage_whileParser typedParser = (org.xtext.ui.contentassist.antlr.internal.InternalLangage_whileParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public Langage_whileGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(Langage_whileGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
